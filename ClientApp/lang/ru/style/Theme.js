export default {
  header: 'Тема',
  headerText: 'Легко изменять цвета вашего приложения программно. Перестройте таблицу стилей по умолчанию и настройте различные аспекты структуры для ваших конкретных потребностей. Если вы ищете **Генератор Тем**, пройдите по ссылке [здесь](/theme-generator).',
  lightAndDarkHeader: 'Светлая и Темная',
  lightAndDarkText1: 'Vuetify поддерживает как **light**, так и **dark** варианты спецификации Material Design. Это обозначение начинается с корневого компонента приложения «v-app» и поддерживается большинством компонентов. По умолчанию ваше приложение будет использовать тему **light**, но это можно легко перезаписать, добавив **dark** свойство.',
  lightAndDarkText2: 'Когда вы укажете компонент как светлый или темный, все его дети наследуют и применяют то же самое, если не указано иное. Из-за специфики CSS есть определенные комбинации, которые могут побудить вас вручную назначить _тему_ для вложенных детей. Это, скорее всего, произойдет при использовании темы **dark**.',
  customizingHeader: 'Пользовательская настройка',
  customizingText1: 'По умолчанию Vuetify имеет стандартную тему для всех компонентов.',
  customizingText2: 'Это можно легко изменить. Просто передайте свойство **theme** функции `Vue.use`. Вы можете изменить все или только некоторые из свойств темы, а оставшееся наследование - по умолчанию.',
  customizingText3: 'Вы также можете использовать предопределенные цвета материала.',
  customizingText4: 'Под капотом Vuetify будет генерировать классы css на основе этих значений, которые будут доступны в DOM. Эти классы будут следовать той же разметке, что и другие вспомогательные классы, например, «primary» или «secondary-text».',
  customizingText5: 'Эти значения также будут доступны для экземпляра **$vuetify** объекта в соответствии с **темой**. Это позволяет _динамически_ изменять вашу тему. За кулисами Vuetify будет восстанавливать и обновлять ваши классы тем, без видимого обновления вашего приложения.',
  stylusHeader: 'Структура stylus-loader с Webpack',
  stylusText1: 'Vuetify построен поверх **stylus**. Подобно **scss**, вы можете изменять переменные и повторно компилировать файлы стилей. Список доступных переменных находится [здесь](https://github.com/vuetifyjs/vuetify/blob/master/src/stylus/settings/variables.styl). Чтобы создать файл stylus, вам нужно настроить приложение для поддержки _stylus_. Если вы используете один из готовых шаблонов, доступных в руководстве [Быстрый старт](/get-started/quick-start), вы можете пропустить следующий раздел.',
  stylusHeader2: 'Настройки stylus с Webpack',
  stylusText2: 'В командной строке выполните:',
  stylusText3: 'Это установит зависимости, необходимые для импорта и анализа файлов _stylus_. После установки откройте свою конфигурацию webpack и добавьте правило для stylus. Для приложений на основе **SSR** убедитесь, что импорт находится в вашей основной `клиентской записи`.',
  stylusText4: 'Создайте папку с именем `stylus` в каталоге src (или соответствующем каталоге ресурсов) с файлом с именем `main.styl`. Это будет отправной точкой для импорта и восстановления стилей Vuetify по умолчанию. После создания откройте файл .styl и добавьте эту запись.',
  stylusText5: 'Имейте в виду, что относительное расположение node_modules может отличаться в вашем проекте, поэтому отрегулируйте его соответствующим образом. Рекомендуется, чтобы импорт был помещен в основное приложение `index.js` или `client-entry.js` файл. **НЕ** импортируйте свой `main.styl` внутри компонента. Это _желание_ приведет к проблемам с производительностью и резко замедляет **HMR** (горячая перезагрузка модуля).',
  stylusText6: 'После того, как вы определили местоположение импорта, если вам требуется таблица стилей Vuetify тегом <link> в вашем индексном файле, удалите его. Перезагрузите процессы сборки и повторно запустите проект. Вы должны видеть, что все стили работают правильно.',
  stylusHeader3: 'Изменение значений',
  stylusText7: 'Теперь, когда настроен _stylus_, вы можете установить значения по умолчанию для переменных _stylus_, которые вы хотите изменить. Они должны быть объявлены перед импортом и будут автоматически отменять значения по умолчанию Vuetify.',
  toc: [
    {
      text: 'Тема',
      href: 'introduction'
    },
    {
      text: 'Светлая и Темная',
      href: 'light-and-dark'
    },
    {
      text: 'Пользовательские настройки',
      href: 'customizing'
    },
    {
      text: 'Изменение переменных Stylus',
      href: 'stylus-guide'
    }
  ]
}
